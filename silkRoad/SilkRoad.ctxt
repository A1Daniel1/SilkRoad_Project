#BlueJ class context
comment0.target=SilkRoad
comment0.text=\n\ La\ clase\ {@code\ SilkRoad}\ representa\ la\ carretera\ principal\ donde\ interact\u00FAan\n\ robots\ y\ tiendas.\n\ \n\ Funcionalidades\ principales\:\n\ <ul>\n\ \ \ <li>Colocar\ y\ eliminar\ tiendas</li>\n\ \ \ <li>Colocar\ y\ eliminar\ robots</li>\n\ \ \ <li>Mover\ robots\ a\ lo\ largo\ de\ la\ carretera</li>\n\ \ \ <li>Reabastecer\ tiendas</li>\n\ \ \ <li>Reiniciar\ la\ simulaci\u00F3n\ (reboot)</li>\n\ \ \ <li>Mostrar/ocultar\ la\ simulaci\u00F3n</li>\n\ </ul>\n
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\n\ Crea\ una\ nueva\ carretera\ Silk\ Road.\n\n\ @param\ length\ longitud\ de\ la\ carretera\n
comment10.params=
comment10.target=int\ profit()
comment10.text=\ \n\ @return\ el\ beneficio\ total\ acumulado\ \n
comment11.params=
comment11.target=int[][]\ stores()
comment11.text=\n\ @return\ matriz\ con\ las\ tiendas\ (ubicaci\u00F3n,\ tenges\ actuales)\n
comment12.params=
comment12.target=int[][]\ robots()
comment12.text=\n\ @return\ matriz\ con\ los\ robots\ (ubicaci\u00F3n\ actual,\ ubicaci\u00F3n\ inicial)\n
comment13.params=
comment13.target=void\ makeVisible()
comment13.text=\ \n\ Hace\ visible\ la\ carretera\ y\ todos\ los\ elementos.\ \n
comment14.params=
comment14.target=void\ makeInvisible()
comment14.text=\ \n\ Oculta\ la\ carretera\ y\ todos\ los\ elementos.\ \n
comment15.params=
comment15.target=void\ finish()
comment15.text=\ \n\ Finaliza\ la\ simulaci\u00F3n\ cerrando\ el\ programa.\ \n
comment16.params=
comment16.target=boolean\ ok()
comment16.text=\ \n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa\ \n
comment17.params=lines
comment17.target=void\ createFromInput(int[][])
comment17.text=\n\ Crea\ la\ ruta\ de\ seda\ a\ partir\ de\ una\ entrada\ con\ enteros.\n\ Formato\:\n\ {1,\ x}\ ->\ robot\ en\ x\n\ {2,\ x,\ c}\ ->\ tienda\ en\ x\ con\ c\ tenges\n
comment18.params=
comment18.target=void\ autoMoveRobots()
comment18.text=\n\ Movimiento\ autom\u00E1tico\ de\ robots\ buscando\ maximizar\ ganancias.\n\ Estrategia\ greedy\ simple\:\ cada\ robot\ toma\ la\ tienda\ m\u00E1s\ rentable\ disponible.\n
comment19.params=
comment19.target=java.util.Map\ consultStoreStats()
comment19.text=Consulta\:\ cu\u00E1ntas\ veces\ ha\ sido\ desocupada\ cada\ tienda
comment2.params=location\ tenges
comment2.target=void\ placeStore(int,\ int)
comment2.text=\n\ Coloca\ una\ tienda\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica.\n\n\ @param\ location\ ubicaci\u00F3n\ de\ la\ tienda\n\ @param\ tenges\ \ \ cantidad\ inicial\ de\ tenges\n
comment20.params=
comment20.target=java.util.Map\ consultRobotStats()
comment20.text=Consulta\:\ ganancias\ de\ cada\ robot
comment3.params=location
comment3.target=void\ removeStore(int)
comment3.text=\n\ Elimina\ una\ tienda\ ubicada\ en\ una\ posici\u00F3n.\n\n\ @param\ location\ ubicaci\u00F3n\ de\ la\ tienda\ a\ eliminar\n
comment4.params=location
comment4.target=void\ placeRobot(int)
comment4.text=\n\ Coloca\ un\ robot\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica.\n\n\ @param\ location\ posici\u00F3n\ inicial\ del\ robot\n
comment5.params=location
comment5.target=void\ removeRobot(int)
comment5.text=\n\ Elimina\ un\ robot\ ubicado\ en\ una\ posici\u00F3n.\n\n\ @param\ location\ ubicaci\u00F3n\ actual\ del\ robot\ a\ eliminar\n
comment6.params=location\ meters
comment6.target=void\ moveRobot(int,\ int)
comment6.text=\n\ Mueve\ un\ robot\ desde\ su\ ubicaci\u00F3n\ actual\ un\ n\u00FAmero\ de\ metros.\n\n\ @param\ location\ ubicaci\u00F3n\ actual\ del\ robot\n\ @param\ meters\ \ \ distancia\ a\ mover\n
comment7.params=
comment7.target=void\ resupplyStores()
comment7.text=\ \n\ Reabastece\ todas\ las\ tiendas\ de\ la\ carretera.\ \n
comment8.params=
comment8.target=void\ returnRobots()
comment8.text=\ \n\ Devuelve\ todos\ los\ robots\ a\ su\ posici\u00F3n\ inicial.\ \n
comment9.params=
comment9.target=void\ reboot()
comment9.text=\ \n\ Reinicia\ la\ simulaci\u00F3n\ (resetea\ tiendas,\ robots\ y\ ganancias).\ \n
numComments=21
